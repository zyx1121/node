generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MEMBER
  ADMIN
}

enum Visibility {
  PRIVATE
  PUBLIC
}

model Document {
  id         String     @id @default(cuid())
  title      String
  content    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  userId     String
  user       User       @relation(fields: [userId], references: [id])
  visibility Visibility @default(PRIVATE)
  links      Link[]     @relation("SourceDocument")
  linkedBy   Link[]     @relation("TargetDocument")
}

model Link {
  id               String   @id @default(cuid())
  sourceDocumentId String
  targetDocumentId String
  sourceDocument   Document @relation("SourceDocument", fields: [sourceDocumentId], references: [id])
  targetDocument   Document @relation("TargetDocument", fields: [targetDocumentId], references: [id])

  @@unique([sourceDocumentId, targetDocumentId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?  @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  documents     Document[]
  role          Role       @default(MEMBER)

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
